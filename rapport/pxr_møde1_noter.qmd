---
title: "pxR - møde 1"
subtitle: "Noter"
author: "Johan Ejstrud"
date: "`r Sys.Date()`"
date-format: "D. MMM YYYY"
format:
  html:
    standalone: true
    embed-resources: true
editor: source
language: 
  title-block-author-single: "Forfatter"
  title-block-published: "Dato"
---

- Brug `file.path` i stedet for `paste0` til at lave filstier.
- Brug relative filstier i stedet for absolutte stier, da RStudio projektet sikrer at working directory er det samme hver gang. 

**Før**
```{r, eval=FALSE}
hi <- getwd()
workPath <- paste0(getwd(),"/DO_PX/tmp/")
dataPath <- paste0(getwd(),"/DO_PX/datasaet/")
pgmPath <- paste0(getwd(),"/DO_PX/pgm")
resultsPath <- paste0(getwd(),"/DO_PX/results/")
metaPath <- paste0(getwd(),"/DO_PX/metadata/")

# general get metadata for one variable from statbank
source(paste0(pgmPath,"/getMetaFromStatbank.R"))

if(file.exists(paste0(metaPath,"/meta_",PXMATRIX,"_Modified.xlsx"))){
  # no need TO DO
} else {
source(paste0(pgmPath,"/DO_PX_step1.R"))
}


```

**Efter**
```{r, eval=FALSE}
doPxDir     <- file.path("DO_PX")
workPath    <- file.path(doPxDir, "tmp")
dataPath    <- file.path(doPxDir, "datasaet")
pgmPath     <- file.path(doPxDir, "pgm")
resultsPath <- file.path(doPxDir, "results")
metaPath    <- file.path(doPxDir, "metadata")

# general get metadata for one variable from statbank
source(file.path(pgmPath, "getMetaFromStatbank.R"))

if(file.exists(file.path(metaPath, glue::glue("meta_{PXMATRIX}_Modified.xlsx")))){
  # no need TO DO
} else {
  source(file.path(pgmPath, "DO_PX_step1.R"))
}
```

---

- Brug `deframe()` til at lave en tibble med 2 søjler om til en navngivet liste. 

**Før**
```{r, eval = FALSE}
PXkey <- 
  tidy_General |> 
  mutate(name = "{keyword}[{lang}]" |> glue::glue() %>% str_remove_all("\\[]")) |> 
  pull(name)

PXvalue <- tidy_General |> pull(value)
list3 <- PXvalue |> set_names(PXkey)
```

**Efter**
```{r, eval = FALSE}
list3 <-
  tidy_General %>% 
  mutate(name = glue("{keyword}[{lang}]") %>% str_remove_all("\\[]")) %>% 
  select(name, value) %>% 
  deframe()
```


--- 

- Brug `!%in%` (not in list)

**Før**
```{r, eval = FALSE}
filter(lang != "en" & lang != "da" & lang != "kl")
```

**Efter**
```{r, eval = FALSE}
filter(!lang %in% c("en", "da", "kl"))
```
